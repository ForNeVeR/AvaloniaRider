name: Main
on:
  push:
    branches:
      - net221
  pull_request:
    branches:
      - net221
  schedule:
    - cron: '0 0 * * 0'

jobs:
  main:
    runs-on: ${{ matrix.image }}
    strategy:
      matrix:
        image: [macos-10.15, ubuntu-20.04, windows-2019]
      fail-fast: false
    env:
      DOTNET_NOLOGO: 1
      DOTNET_CLI_TELEMETRY_OPTOUT: 1
    steps:
      - uses: actions/checkout@v2

      # RdGen
      - name: RdGen
        run: ./gradlew rdgen

      # Backend
      - name: Set up .NET SDK
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '6.0.x'
      - name: Build Backend
        run: dotnet build -c Release

      # Frontend
      - name: Test
        run: ./gradlew -PbuildConfiguration=Release -PbuildNumber=${{ github.run_id }} test
      - name: Upload Test Results
        uses: actions/upload-artifact@v2
        with:
          name: ${{ runner.os }}.test-results
          path: build/reports/tests
        if: ${{ always() }}
      - name: Upload Test Logs
        uses: actions/upload-artifact@v2.2.4
        with:
          name: ${{ runner.os }}.test-logs
          path: build/idea-sandbox/system-test/log
        if: ${{ always() }}

      # Distribution
      - name: Build Distribution
        if: matrix.image == 'ubuntu-20.04'
        run: ./gradlew -PbuildConfiguration=Release -PbuildNumber=${{ github.run_id }} buildPlugin
      - name: Determine Version
        if: matrix.image == 'ubuntu-20.04'
        shell: pwsh
        run: |
          $version = ./scripts/Get-Version.ps1
          "AVALONIA_RIDER_VERSION=$version" | Out-File $env:GITHUB_ENV
      - name: Unpack Distribution # for the purpose of uploading
        if: matrix.image == 'ubuntu-20.04'
        shell: pwsh
        run: scripts/Unpack-Distribution.ps1
      - name: Upload Distribution
        if: matrix.image == 'ubuntu-20.04'
        uses: actions/upload-artifact@v2
        with:
          name: avaloniarider-${{ env.AVALONIA_RIDER_VERSION }}
          path: build/distributions/unpacked
